generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String         @id @default(cuid())
  email         String         @unique
  emailVerified Boolean        @default(false)
  name          String?
  image         String?
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  preferences   Json?
  accounts      Account[]
  notifications Notification[]
  sessions      Session[]
}

model Session {
  id        String   @id @default(cuid())
  expiresAt DateTime
  token     String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  ipAddress String?
  userAgent String?
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
}

model Account {
  id           String    @id @default(cuid())
  accountId    String
  providerId   String
  userId       String
  accessToken  String?
  refreshToken String?
  password     String?
  expiresAt    DateTime?
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
  user         User      @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([providerId, accountId])
  @@index([userId])
}

model Verification {
  id         String   @id @default(cuid())
  identifier String
  value      String
  expiresAt  DateTime
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@unique([identifier, value])
  @@index([identifier])
}

model Notification {
  id        String             @id @default(cuid())
  title     String
  message   String?
  type      NotificationType   @default(INFO)
  status    NotificationStatus @default(UNREAD)
  userId    String
  data      Json?
  createdAt DateTime           @default(now())
  updatedAt DateTime           @updatedAt
  readAt    DateTime?
  user      User               @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
  @@index([userId, status])
  @@index([createdAt])
}

enum NotificationType {
  INFO
  SUCCESS
  WARNING
  ERROR
  SYSTEM
}

enum NotificationStatus {
  UNREAD
  READ
  ARCHIVED
}
